{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_ERROR, AGREGAR_PRODUCTO_EXITO } from '../types';\nimport clienteAxios from '../config/axios'; // Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      // insertar en la api\n      await clienteAxios.post('/productos', producto); // Si todo sale bindActionCreators, actualiza el state\n\n      dispatch(agregarProductoExito(producto));\n      console.log('Producto añadido');\n    } catch (error) {\n      console.log('Ha sudecido un error', error); // Si hay un error, cambiar el state\n\n      dispatch(agregarProductoError(true));\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // Si el producto se guarda en base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // Si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n});","map":{"version":3,"sources":["C:/Users/bcn/Documents/curso-react/crud-redux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_ERROR","AGREGAR_PRODUCTO_EXITO","clienteAxios","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","console","log","error","agregarProductoError","type","payload","estado"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,sBAA3B,EAAmDC,sBAAnD,QAAiF,UAAjF;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CAMA;;AAEA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA4C;AAClD,SAAO,MAAOC,QAAP,IAAoB;AAC1BA,IAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;;AACA,QAAI;AAEH;AACA,YAAMJ,YAAY,CAACK,IAAb,CAAkB,YAAlB,EAA+BH,QAA/B,CAAN,CAHG,CAIH;;AACAC,MAAAA,QAAQ,CAACG,oBAAoB,CAACJ,QAAD,CAArB,CAAR;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,KAPD,CAOE,OAAOC,KAAP,EAAc;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCC,KAAnC,EADe,CAEf;;AACAN,MAAAA,QAAQ,CAACO,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACA;AACD,GAdD;AAeA;;AAED,MAAMN,eAAe,GAAG,OAAO;AAC9BO,EAAAA,IAAI,EAAEd,gBADwB;AAE9Be,EAAAA,OAAO,EAAE;AAFqB,CAAP,CAAxB,C,CAKA;;;AAEA,MAAMN,oBAAoB,GAAIJ,QAAD,KAAe;AAC3CS,EAAAA,IAAI,EAAEZ,sBADqC;AAE3Ca,EAAAA,OAAO,EAAEV;AAFkC,CAAf,CAA7B,C,CAKA;;;AAEA,MAAMQ,oBAAoB,GAAIG,MAAD,KAAa;AACzCF,EAAAA,IAAI,EAAEb,sBADmC;AAEzCc,EAAAA,OAAO,EAAEC;AAFgC,CAAb,CAA7B","sourcesContent":["import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_ERROR, AGREGAR_PRODUCTO_EXITO } from '../types';\r\nimport clienteAxios from '../config/axios'\r\n\r\n\r\n\r\n\r\n\r\n// Crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(producto) {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(agregarProducto());\r\n\t\ttry {\r\n\r\n\t\t\t// insertar en la api\r\n\t\t\tawait clienteAxios.post('/productos',producto)\r\n\t\t\t// Si todo sale bindActionCreators, actualiza el state\r\n\t\t\tdispatch(agregarProductoExito(producto));\r\n\t\t\tconsole.log('Producto añadido')\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Ha sudecido un error',error);\r\n\t\t\t// Si hay un error, cambiar el state\r\n\t\t\tdispatch(agregarProductoError(true));\r\n\t\t}\r\n\t};\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n\ttype: AGREGAR_PRODUCTO,\r\n\tpayload: true\r\n});\r\n\r\n// Si el producto se guarda en base de datos\r\n\r\nconst agregarProductoExito = (producto) => ({\r\n\ttype: AGREGAR_PRODUCTO_EXITO,\r\n\tpayload: producto\r\n});\r\n\r\n// Si hubo un error\r\n\r\nconst agregarProductoError = (estado) => ({\r\n\ttype: AGREGAR_PRODUCTO_ERROR,\r\n\tpayload: estado\r\n});\r\n"]},"metadata":{},"sourceType":"module"}