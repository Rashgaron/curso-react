{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_ERROR, AGREGAR_PRODUCTO_EXITO, COMENZAR_DESCARGA_PRODUCTOS, DESCARGA_PRODUCTOS_EXITO, DESCARGA_PRODUCTOS_ERROR, OBTENER_PRODUCTO_ELIMINAR, PRODUCTO_ELIMINADO_EXITO, PRODUCTO_ELIMINADO_ERROR, OBTENER_PRODUCTO_EDITAR, PRODUCTO_EDITADO_EXITO, PRODUCTO_EDITADO_ERROR, COMENZAR_EDICION_PRODUCTO } from \"../types\";\nimport clienteAxios from \"../config/axios\";\nimport Swal from \"sweetalert2\"; // Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      // insertar en la api\n      await clienteAxios.post(\"/productos\", producto); // Si todo sale bindActionCreators, actualiza el state\n\n      dispatch(agregarProductoExito(producto)); // Alerta\n\n      Swal.fire(\"Correcto\", \"El producto se agregó correctamente\", \"success\");\n    } catch (error) {\n      // Si hay un error, cambiar el state\n      dispatch(agregarProductoError(true));\n      Swal.fire({\n        icon: \"error\",\n        title: \"Hubo un error\",\n        text: \"Hubo un error, intenta de nuevo\"\n      });\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // Si el producto se guarda en base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // Si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n}); // Funcion que descarga los productos de bd\n\n\nexport function obtenerProductosAction() {\n  return dispatch => {\n    dispatch(descargarProductos());\n\n    try {\n      setTimeout(async () => {\n        const respuesta = await clienteAxios.get(\"/productos\");\n        dispatch(descargaProductosExitosa(respuesta.data));\n      }, 2000);\n    } catch (error) {\n      console.log(error);\n      dispatch(descargaProductosError());\n    }\n  };\n}\n\nconst descargarProductos = () => ({\n  type: COMENZAR_DESCARGA_PRODUCTOS,\n  payload: true\n});\n\nconst descargaProductosExitosa = productos => ({\n  type: DESCARGA_PRODUCTOS_EXITO,\n  payload: productos\n});\n\nconst descargaProductosError = () => ({\n  type: DESCARGA_PRODUCTOS_ERROR,\n  payload: true\n}); // Selecciona y elimina el producto\n\n\nexport function borrarProductoAction(id) {\n  return async dispatch => {\n    dispatch(obtenerProductoEliminar(id));\n\n    try {\n      await clienteAxios.delete(`/productos/${id}`);\n      dispatch(eliminarProductoExito()); // Si se eliminarProductoError, mostrar alerta\n\n      Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\n    } catch (error) {\n      console.log(error);\n      dispatch(eliminarProductoError());\n    }\n  };\n}\n\nconst obtenerProductoEliminar = id => ({\n  type: OBTENER_PRODUCTO_ELIMINAR,\n  payload: id\n});\n\nconst eliminarProductoExito = () => ({\n  type: PRODUCTO_ELIMINADO_EXITO\n});\n\nconst eliminarProductoError = () => ({\n  type: PRODUCTO_ELIMINADO_ERROR,\n  payload: true\n}); // COLOCAR PRODUCTO EN EDICIÓN\n\n\nexport function obtenerProductoEditar(producto) {\n  return dispatch => {\n    dispatch(obtenerProductoEditarAction(producto));\n  };\n}\n\nconst obtenerProductoEditarAction = producto => ({\n  type: OBTENER_PRODUCTO_EDITAR,\n  payload: producto\n}); // edita un registro en la api y state\n\n\nexport function editarProductoAction(producto) {\n  return async dispatch => {\n    dispatch(editarProducto());\n\n    try {\n      await clienteAxios.put(`/productos/${producto.id}`, producto);\n      dispatch(editarProductoExito(producto));\n    } catch (error) {\n      console.log(error);\n      dispatch(editarProductoError);\n    }\n  };\n}\n\nconst editarProducto = () => ({\n  type: COMENZAR_EDICION_PRODUCTO\n});\n\nconst editarProductoExito = producto => ({\n  type: PRODUCTO_EDITADO_EXITO,\n  payload: producto\n});\n\nconst editarProductoError = () => ({\n  type: PRODUCTO_EDITADO_ERROR\n});","map":{"version":3,"sources":["C:/Users/danni/Documents/ProgramacionWeb/curso-react/crud-redux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_ERROR","AGREGAR_PRODUCTO_EXITO","COMENZAR_DESCARGA_PRODUCTOS","DESCARGA_PRODUCTOS_EXITO","DESCARGA_PRODUCTOS_ERROR","OBTENER_PRODUCTO_ELIMINAR","PRODUCTO_ELIMINADO_EXITO","PRODUCTO_ELIMINADO_ERROR","OBTENER_PRODUCTO_EDITAR","PRODUCTO_EDITADO_EXITO","PRODUCTO_EDITADO_ERROR","COMENZAR_EDICION_PRODUCTO","clienteAxios","Swal","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","fire","error","agregarProductoError","icon","title","text","type","payload","estado","obtenerProductosAction","descargarProductos","setTimeout","respuesta","get","descargaProductosExitosa","data","console","log","descargaProductosError","productos","borrarProductoAction","id","obtenerProductoEliminar","delete","eliminarProductoExito","eliminarProductoError","obtenerProductoEditar","obtenerProductoEditarAction","editarProductoAction","editarProducto","put","editarProductoExito","editarProductoError"],"mappings":"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","sourcesContent":["import {\r\n  AGREGAR_PRODUCTO,\r\n  AGREGAR_PRODUCTO_ERROR,\r\n  AGREGAR_PRODUCTO_EXITO,\r\n  COMENZAR_DESCARGA_PRODUCTOS,\r\n  DESCARGA_PRODUCTOS_EXITO,\r\n  DESCARGA_PRODUCTOS_ERROR,\r\n  OBTENER_PRODUCTO_ELIMINAR,\r\n  PRODUCTO_ELIMINADO_EXITO,\r\n  PRODUCTO_ELIMINADO_ERROR,\r\n  OBTENER_PRODUCTO_EDITAR,\r\n  PRODUCTO_EDITADO_EXITO,\r\n  PRODUCTO_EDITADO_ERROR,\r\n  COMENZAR_EDICION_PRODUCTO,\r\n} from \"../types\";\r\nimport clienteAxios from \"../config/axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// Crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch(agregarProducto());\r\n    try {\r\n      // insertar en la api\r\n      await clienteAxios.post(\"/productos\", producto);\r\n      // Si todo sale bindActionCreators, actualiza el state\r\n      dispatch(agregarProductoExito(producto));\r\n      // Alerta\r\n      Swal.fire(\"Correcto\", \"El producto se agregó correctamente\", \"success\");\r\n    } catch (error) {\r\n      // Si hay un error, cambiar el state\r\n      dispatch(agregarProductoError(true));\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Hubo un error\",\r\n        text: \"Hubo un error, intenta de nuevo\",\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n  type: AGREGAR_PRODUCTO,\r\n  payload: true,\r\n});\r\n\r\n// Si el producto se guarda en base de datos\r\n\r\nconst agregarProductoExito = (producto) => ({\r\n  type: AGREGAR_PRODUCTO_EXITO,\r\n  payload: producto,\r\n});\r\n\r\n// Si hubo un error\r\n\r\nconst agregarProductoError = (estado) => ({\r\n  type: AGREGAR_PRODUCTO_ERROR,\r\n  payload: estado,\r\n});\r\n\r\n// Funcion que descarga los productos de bd\r\n\r\nexport function obtenerProductosAction() {\r\n  return (dispatch) => {\r\n    dispatch(descargarProductos());\r\n\r\n    try {\r\n      setTimeout(async () => {\r\n        const respuesta = await clienteAxios.get(\"/productos\");\r\n        dispatch(descargaProductosExitosa(respuesta.data));\r\n      }, 2000);\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(descargaProductosError());\r\n    }\r\n  };\r\n}\r\n\r\nconst descargarProductos = () => ({\r\n  type: COMENZAR_DESCARGA_PRODUCTOS,\r\n  payload: true,\r\n});\r\n\r\nconst descargaProductosExitosa = (productos) => ({\r\n  type: DESCARGA_PRODUCTOS_EXITO,\r\n  payload: productos,\r\n});\r\n\r\nconst descargaProductosError = () => ({\r\n  type: DESCARGA_PRODUCTOS_ERROR,\r\n  payload: true,\r\n});\r\n\r\n// Selecciona y elimina el producto\r\n\r\nexport function borrarProductoAction(id) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerProductoEliminar(id));\r\n    try {\r\n      await clienteAxios.delete(`/productos/${id}`);\r\n      dispatch(eliminarProductoExito());\r\n      // Si se eliminarProductoError, mostrar alerta\r\n      Swal.fire(\"Deleted!\", \"Your file has been deleted.\", \"success\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch(eliminarProductoError());\r\n    }\r\n  };\r\n}\r\n\r\nconst obtenerProductoEliminar = (id) => ({\r\n  type: OBTENER_PRODUCTO_ELIMINAR,\r\n  payload: id,\r\n});\r\n\r\nconst eliminarProductoExito = () => ({\r\n  type: PRODUCTO_ELIMINADO_EXITO,\r\n});\r\n\r\nconst eliminarProductoError = () => ({\r\n  type: PRODUCTO_ELIMINADO_ERROR,\r\n  payload: true,\r\n});\r\n\r\n// COLOCAR PRODUCTO EN EDICIÓN\r\n\r\nexport function obtenerProductoEditar(producto) {\r\n  return (dispatch) => {\r\n    dispatch(obtenerProductoEditarAction(producto));\r\n  };\r\n}\r\n\r\nconst obtenerProductoEditarAction = (producto) => ({\r\n  type: OBTENER_PRODUCTO_EDITAR,\r\n  payload: producto,\r\n});\r\n\r\n// edita un registro en la api y state\r\nexport function editarProductoAction(producto) {\r\n  return async (dispatch) => {\r\n    dispatch(editarProducto());\r\n\r\n    try {\r\n      await clienteAxios.put(`/productos/${producto.id}`, producto);\r\n      dispatch(editarProductoExito(producto));\r\n    } catch (error) {\r\n\t  console.log(error);\r\n\t  dispatch(editarProductoError)\r\n    }\r\n  };\r\n}\r\n\r\nconst editarProducto = () => ({\r\n  type: COMENZAR_EDICION_PRODUCTO,\r\n});\r\n\r\nconst editarProductoExito = (producto) => ({\r\n  type: PRODUCTO_EDITADO_EXITO,\r\n  payload: producto,\r\n});\r\n\r\nconst editarProductoError =()=>({\r\n\ttype:PRODUCTO_EDITADO_ERROR\r\n})"]},"metadata":{},"sourceType":"module"}