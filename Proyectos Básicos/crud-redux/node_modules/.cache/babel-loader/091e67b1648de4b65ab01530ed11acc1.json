{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_ERROR, AGREGAR_PRODUCTO_EXITO } from '../types';\nimport clienteAxios from '../config/axios';\nimport Swal from 'sweetalert2'; // Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      // insertar en la api\n      await clienteAxios.post('/produtos', producto); // Si todo sale bindActionCreators, actualiza el state\n\n      dispatch(agregarProductoExito(producto)); // Alerta \n\n      Swal.fire('Correcto', 'El producto se agreg칩 correctamente', 'success');\n      console.log('Producto a침adido');\n    } catch (error) {\n      console.log('Ha sudecido un error', error); // Si hay un error, cambiar el state\n\n      dispatch(agregarProductoError(true));\n      Swal.fire({\n        icon: 'error',\n        title: 'Hubo un error',\n        text: 'Hubo un error, intenta de nuevo'\n      });\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // Si el producto se guarda en base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // Si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n});","map":{"version":3,"sources":["C:/Users/bcn/Documents/curso-react/crud-redux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_ERROR","AGREGAR_PRODUCTO_EXITO","clienteAxios","Swal","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","fire","console","log","error","agregarProductoError","icon","title","text","type","payload","estado"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,sBAA3B,EAAmDC,sBAAnD,QAAiF,UAAjF;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAEA;;AAEA,OAAO,SAASC,wBAAT,CAAkCC,QAAlC,EAA4C;AAClD,SAAO,MAAOC,QAAP,IAAoB;AAC1BA,IAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;;AACA,QAAI;AAEH;AACA,YAAML,YAAY,CAACM,IAAb,CAAkB,WAAlB,EAA8BH,QAA9B,CAAN,CAHG,CAIH;;AACAC,MAAAA,QAAQ,CAACG,oBAAoB,CAACJ,QAAD,CAArB,CAAR,CALG,CAOH;;AACAF,MAAAA,IAAI,CAACO,IAAL,CACC,UADD,EACY,qCADZ,EACmD,SADnD;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,KAZD,CAYE,OAAOC,KAAP,EAAc;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCC,KAAnC,EADe,CAEf;;AACAP,MAAAA,QAAQ,CAACQ,oBAAoB,CAAC,IAAD,CAArB,CAAR;AAGAX,MAAAA,IAAI,CAACO,IAAL,CAAU;AACTK,QAAAA,IAAI,EAAC,OADI;AAETC,QAAAA,KAAK,EAAC,eAFG;AAGTC,QAAAA,IAAI,EAAC;AAHI,OAAV;AAKA;AACD,GA1BD;AA2BA;;AAED,MAAMV,eAAe,GAAG,OAAO;AAC9BW,EAAAA,IAAI,EAAEnB,gBADwB;AAE9BoB,EAAAA,OAAO,EAAE;AAFqB,CAAP,CAAxB,C,CAKA;;;AAEA,MAAMV,oBAAoB,GAAIJ,QAAD,KAAe;AAC3Ca,EAAAA,IAAI,EAAEjB,sBADqC;AAE3CkB,EAAAA,OAAO,EAAEd;AAFkC,CAAf,CAA7B,C,CAKA;;;AAEA,MAAMS,oBAAoB,GAAIM,MAAD,KAAa;AACzCF,EAAAA,IAAI,EAAElB,sBADmC;AAEzCmB,EAAAA,OAAO,EAAEC;AAFgC,CAAb,CAA7B","sourcesContent":["import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_ERROR, AGREGAR_PRODUCTO_EXITO } from '../types';\r\nimport clienteAxios from '../config/axios'\r\nimport Swal from 'sweetalert2'\r\n\r\n// Crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(producto) {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(agregarProducto());\r\n\t\ttry {\r\n\r\n\t\t\t// insertar en la api\r\n\t\t\tawait clienteAxios.post('/produtos',producto)\r\n\t\t\t// Si todo sale bindActionCreators, actualiza el state\r\n\t\t\tdispatch(agregarProductoExito(producto));\r\n\r\n\t\t\t// Alerta \r\n\t\t\tSwal.fire(\r\n\t\t\t\t'Correcto','El producto se agreg칩 correctamente', 'success'\r\n\t\t\t)\r\n\t\t\tconsole.log('Producto a침adido')\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('Ha sudecido un error',error);\r\n\t\t\t// Si hay un error, cambiar el state\r\n\t\t\tdispatch(agregarProductoError(true));\r\n\r\n\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon:'error',\r\n\t\t\t\ttitle:'Hubo un error',\r\n\t\t\t\ttext:'Hubo un error, intenta de nuevo'\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n\ttype: AGREGAR_PRODUCTO,\r\n\tpayload: true\r\n});\r\n\r\n// Si el producto se guarda en base de datos\r\n\r\nconst agregarProductoExito = (producto) => ({\r\n\ttype: AGREGAR_PRODUCTO_EXITO,\r\n\tpayload: producto\r\n});\r\n\r\n// Si hubo un error\r\n\r\nconst agregarProductoError = (estado) => ({\r\n\ttype: AGREGAR_PRODUCTO_ERROR,\r\n\tpayload: estado\r\n});\r\n"]},"metadata":{},"sourceType":"module"}