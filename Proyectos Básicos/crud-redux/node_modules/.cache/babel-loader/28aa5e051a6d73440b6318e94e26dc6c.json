{"ast":null,"code":"import { AGREGAR_PRODUCTO, AGREGAR_PRODUCTO_ERROR, AGREGAR_PRODUCTO_EXITO, COMENZAR_DESCARGA_PRODUCTOS, DESCARGA_PRODUCTOS_EXITO, DESCARGA_PRODUCTOS_ERROR, OBTENER_PRODUCTO_ELIMINAR, PRODUCTO_ELIMINADO_EXITO, PRODUCTO_ELIMINADO_ERROR, OBTENER_PRODUCTO_EDITAR, PRODUCTO_EDITADO_EXITO, PRODUCTO_EDITADO_ERROR } from '../types';\nimport clienteAxios from '../config/axios';\nimport Swal from 'sweetalert2'; // Crear nuevos productos\n\nexport function crearNuevoProductoAction(producto) {\n  return async dispatch => {\n    dispatch(agregarProducto());\n\n    try {\n      // insertar en la api\n      await clienteAxios.post('/productos', producto); // Si todo sale bindActionCreators, actualiza el state\n\n      dispatch(agregarProductoExito(producto)); // Alerta\n\n      Swal.fire('Correcto', 'El producto se agregó correctamente', 'success');\n    } catch (error) {\n      // Si hay un error, cambiar el state\n      dispatch(agregarProductoError(true));\n      Swal.fire({\n        icon: 'error',\n        title: 'Hubo un error',\n        text: 'Hubo un error, intenta de nuevo'\n      });\n    }\n  };\n}\n\nconst agregarProducto = () => ({\n  type: AGREGAR_PRODUCTO,\n  payload: true\n}); // Si el producto se guarda en base de datos\n\n\nconst agregarProductoExito = producto => ({\n  type: AGREGAR_PRODUCTO_EXITO,\n  payload: producto\n}); // Si hubo un error\n\n\nconst agregarProductoError = estado => ({\n  type: AGREGAR_PRODUCTO_ERROR,\n  payload: estado\n}); // Funcion que descarga los productos de bd\n\n\nexport function obtenerProductosAction() {\n  return dispatch => {\n    dispatch(descargarProductos());\n\n    try {\n      setTimeout(async () => {\n        const respuesta = await clienteAxios.get('/productos');\n        dispatch(descargaProductosExitosa(respuesta.data));\n      }, 2000);\n    } catch (error) {\n      console.log(error);\n      dispatch(descargaProductosError());\n    }\n  };\n}\n\nconst descargarProductos = () => ({\n  type: COMENZAR_DESCARGA_PRODUCTOS,\n  payload: true\n});\n\nconst descargaProductosExitosa = productos => ({\n  type: DESCARGA_PRODUCTOS_EXITO,\n  payload: productos\n});\n\nconst descargaProductosError = () => ({\n  type: DESCARGA_PRODUCTOS_ERROR,\n  payload: true\n}); // Selecciona y elimina el producto\n\n\nexport function borrarProductoAction(id) {\n  return async dispatch => {\n    dispatch(obtenerProductoEliminar(id));\n\n    try {\n      await clienteAxios.delete(`/productos/${id}`);\n      dispatch(eliminarProductoExito()); // Si se eliminarProductoError, mostrar alerta\n\n      Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n    } catch (error) {\n      console.log(error);\n      dispatch(eliminarProductoError());\n    }\n  };\n}\n\nconst obtenerProductoEliminar = id => ({\n  type: OBTENER_PRODUCTO_ELIMINAR,\n  payload: id\n});\n\nconst eliminarProductoExito = () => ({\n  type: PRODUCTO_ELIMINADO_EXITO\n});\n\nconst eliminarProductoError = () => ({\n  type: PRODUCTO_ELIMINADO_ERROR,\n  payload: true\n}); // COLOCAR PRODUCTO EN EDICIÓN\n\n\nexport function obtenerProductoEditar(producto) {\n  return dispatch => {\n    dispatch(obtenerProductoEditarAction(producto));\n  };\n}\n\nconst obtenerProductoAction = producto => ({\n  type: OBTENER_PRODUCTO_EDITAR,\n  payload: producto\n});","map":{"version":3,"sources":["C:/Users/bcn/Documents/curso-react/crud-redux/src/actions/productoActions.js"],"names":["AGREGAR_PRODUCTO","AGREGAR_PRODUCTO_ERROR","AGREGAR_PRODUCTO_EXITO","COMENZAR_DESCARGA_PRODUCTOS","DESCARGA_PRODUCTOS_EXITO","DESCARGA_PRODUCTOS_ERROR","OBTENER_PRODUCTO_ELIMINAR","PRODUCTO_ELIMINADO_EXITO","PRODUCTO_ELIMINADO_ERROR","OBTENER_PRODUCTO_EDITAR","PRODUCTO_EDITADO_EXITO","PRODUCTO_EDITADO_ERROR","clienteAxios","Swal","crearNuevoProductoAction","producto","dispatch","agregarProducto","post","agregarProductoExito","fire","error","agregarProductoError","icon","title","text","type","payload","estado","obtenerProductosAction","descargarProductos","setTimeout","respuesta","get","descargaProductosExitosa","data","console","log","descargaProductosError","productos","borrarProductoAction","id","obtenerProductoEliminar","delete","eliminarProductoExito","eliminarProductoError","obtenerProductoEditar","obtenerProductoEditarAction","obtenerProductoAction"],"mappings":"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","sourcesContent":["import {\r\n\tAGREGAR_PRODUCTO,\r\n\tAGREGAR_PRODUCTO_ERROR,\r\n\tAGREGAR_PRODUCTO_EXITO,\r\n\tCOMENZAR_DESCARGA_PRODUCTOS,\r\n\tDESCARGA_PRODUCTOS_EXITO,\r\n\tDESCARGA_PRODUCTOS_ERROR,\r\n\tOBTENER_PRODUCTO_ELIMINAR,\r\n\tPRODUCTO_ELIMINADO_EXITO,\r\n\tPRODUCTO_ELIMINADO_ERROR,\r\n\tOBTENER_PRODUCTO_EDITAR,\r\n\tPRODUCTO_EDITADO_EXITO,\r\n\tPRODUCTO_EDITADO_ERROR\r\n} from '../types';\r\nimport clienteAxios from '../config/axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n// Crear nuevos productos\r\n\r\nexport function crearNuevoProductoAction(producto) {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(agregarProducto());\r\n\t\ttry {\r\n\t\t\t// insertar en la api\r\n\t\t\tawait clienteAxios.post('/productos', producto);\r\n\t\t\t// Si todo sale bindActionCreators, actualiza el state\r\n\t\t\tdispatch(agregarProductoExito(producto));\r\n\t\t\t// Alerta\r\n\t\t\tSwal.fire('Correcto', 'El producto se agregó correctamente', 'success');\r\n\t\t} catch (error) {\r\n\t\t\t// Si hay un error, cambiar el state\r\n\t\t\tdispatch(agregarProductoError(true));\r\n\t\t\tSwal.fire({\r\n\t\t\t\ticon: 'error',\r\n\t\t\t\ttitle: 'Hubo un error',\r\n\t\t\t\ttext: 'Hubo un error, intenta de nuevo'\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n}\r\n\r\nconst agregarProducto = () => ({\r\n\ttype: AGREGAR_PRODUCTO,\r\n\tpayload: true\r\n});\r\n\r\n// Si el producto se guarda en base de datos\r\n\r\nconst agregarProductoExito = (producto) => ({\r\n\ttype: AGREGAR_PRODUCTO_EXITO,\r\n\tpayload: producto\r\n});\r\n\r\n// Si hubo un error\r\n\r\nconst agregarProductoError = (estado) => ({\r\n\ttype: AGREGAR_PRODUCTO_ERROR,\r\n\tpayload: estado\r\n});\r\n\r\n// Funcion que descarga los productos de bd\r\n\r\nexport function obtenerProductosAction() {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(descargarProductos());\r\n\r\n\t\ttry {\r\n\t\t\tsetTimeout(async () => {\r\n\t\t\t\tconst respuesta = await clienteAxios.get('/productos');\r\n\t\t\t\tdispatch(descargaProductosExitosa(respuesta.data));\r\n\t\t\t}, 2000);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tdispatch(descargaProductosError());\r\n\t\t}\r\n\t};\r\n}\r\n\r\nconst descargarProductos = () => ({\r\n\ttype: COMENZAR_DESCARGA_PRODUCTOS,\r\n\tpayload: true\r\n});\r\n\r\nconst descargaProductosExitosa = (productos) => ({\r\n\ttype: DESCARGA_PRODUCTOS_EXITO,\r\n\tpayload: productos\r\n});\r\n\r\nconst descargaProductosError = () => ({\r\n\ttype: DESCARGA_PRODUCTOS_ERROR,\r\n\tpayload: true\r\n});\r\n\r\n// Selecciona y elimina el producto\r\n\r\nexport function borrarProductoAction(id) {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(obtenerProductoEliminar(id));\r\n\t\ttry {\r\n\t\t\tawait clienteAxios.delete(`/productos/${id}`);\r\n\t\t\tdispatch(eliminarProductoExito());\r\n\t\t\t// Si se eliminarProductoError, mostrar alerta\r\n\t\t\tSwal.fire('Deleted!', 'Your file has been deleted.', 'success');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tdispatch(eliminarProductoError());\r\n\t\t}\r\n\t};\r\n}\r\n\r\nconst obtenerProductoEliminar = (id) => ({\r\n\ttype: OBTENER_PRODUCTO_ELIMINAR,\r\n\tpayload: id\r\n});\r\n\r\nconst eliminarProductoExito = () => ({\r\n\ttype: PRODUCTO_ELIMINADO_EXITO\r\n});\r\n\r\nconst eliminarProductoError = () => ({\r\n\ttype: PRODUCTO_ELIMINADO_ERROR,\r\n\tpayload: true\r\n});\r\n\r\n\r\n\r\n\r\n// COLOCAR PRODUCTO EN EDICIÓN\r\n\r\nexport function obtenerProductoEditar(producto){\r\n\treturn(dispatch)=>{\r\n\t\tdispatch(obtenerProductoEditarAction(producto))\r\n\t}\r\n}\r\n\r\nconst obtenerProductoAction = producto =>({\r\n\ttype:OBTENER_PRODUCTO_EDITAR,\r\n\tpayload:producto\r\n})"]},"metadata":{},"sourceType":"module"}